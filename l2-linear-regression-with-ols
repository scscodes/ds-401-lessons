{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNkSrx457RKTbsc50pp0FIC"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Lesson 2 - Linear Regression with OLS\n","## Predicting House Prices\n","\n","> **Lesson Objectives**  \n","> - Load, transform and analyze imported `houseprices` data.\n","> - Identify variables that may be useful in predicting house prices.\n","> - Build `LinearRegression` model using these features, and estimate the parameters using `OLS`.\n","\n","### Approach & Notebook Structure\n","This notebook is structured into three major sections. Each section correlates with a learning objective, listed above.\n","\n","Imports and functions can be found towards the beginning of this notebook, in the interest of organization and clarity. Their use is not limited or scoped to specific cells."],"metadata":{"id":"WRMxEjJfNZD5"}},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","import numpy as np\n","import pandas as pd\n","import seaborn as sns\n","\n","from sqlalchemy import create_engine\n","from scipy import stats\n","from scipy.stats import boxcox\n","from scipy.stats import jarque_bera\n","from scipy.stats import normaltest\n","from sklearn import linear_model\n","import statsmodels.api as sm\n","\n","import warnings\n","warnings.filterwarnings('ignore')\n"],"metadata":{"id":"-TLLWmCnLU_N","executionInfo":{"status":"ok","timestamp":1723766562647,"user_tz":240,"elapsed":2778,"user":{"displayName":"Steve Salmons","userId":"09210254671724444253"}}},"execution_count":15,"outputs":[]},{"cell_type":"markdown","source":["## Objective: Load, transform and analyze imported `houseprices` data\n","Import and initialize houseprices data as a DataFrame `df` and perform basic analysis."],"metadata":{"id":"hudNboiiM9UR"}},{"cell_type":"code","execution_count":2,"metadata":{"id":"Wac52T5wLNUo","executionInfo":{"status":"ok","timestamp":1723764844932,"user_tz":240,"elapsed":2377,"user":{"displayName":"Steve Salmons","userId":"09210254671724444253"}}},"outputs":[],"source":["postgres_user = 'dsbc_student'\n","postgres_pw = '7*.8G9QH21'\n","postgres_host = '142.93.121.174'\n","postgres_port = '5432'\n","postgres_db = 'houseprices'\n","\n","\n","engine = create_engine('postgresql://{}:{}@{}:{}/{}'.format(\n","    postgres_user, postgres_pw, postgres_host, postgres_port, postgres_db))\n","\n","df = pd.read_sql_query('select * from houseprices',con=engine)\n","\n","# No need for an open connection,\n","# because you're only doing a single query\n","engine.dispose()"]},{"cell_type":"code","source":["# Saving the a copy of the original DF in memory\n","df_orig = df.copy()"],"metadata":{"id":"bXrS7mlvZCZ3","executionInfo":{"status":"ok","timestamp":1723764906349,"user_tz":240,"elapsed":163,"user":{"displayName":"Steve Salmons","userId":"09210254671724444253"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"collapsed":true,"id":"eAPWcswELYje","executionInfo":{"status":"ok","timestamp":1723728189914,"user_tz":240,"elapsed":252,"user":{"displayName":"Steve Salmons","userId":"09210254671724444253"}},"outputId":"d2a5bc4e-8cf4-4396-8658-55942924e513"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1460, 81)"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["df.head(5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":255},"collapsed":true,"id":"jUV6KH7nM1fw","executionInfo":{"status":"ok","timestamp":1723728960382,"user_tz":240,"elapsed":277,"user":{"displayName":"Steve Salmons","userId":"09210254671724444253"}},"outputId":"84f5be0a-a1fc-4212-a9c7-bb9798e06a85"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   id  mssubclass mszoning  lotfrontage  lotarea street alley lotshape  \\\n","0   1          60       RL         65.0     8450   Pave  None      Reg   \n","1   2          20       RL         80.0     9600   Pave  None      Reg   \n","2   3          60       RL         68.0    11250   Pave  None      IR1   \n","3   4          70       RL         60.0     9550   Pave  None      IR1   \n","4   5          60       RL         84.0    14260   Pave  None      IR1   \n","\n","  landcontour utilities  ... poolarea poolqc fence miscfeature miscval mosold  \\\n","0         Lvl    AllPub  ...        0   None  None        None       0      2   \n","1         Lvl    AllPub  ...        0   None  None        None       0      5   \n","2         Lvl    AllPub  ...        0   None  None        None       0      9   \n","3         Lvl    AllPub  ...        0   None  None        None       0      2   \n","4         Lvl    AllPub  ...        0   None  None        None       0     12   \n","\n","  yrsold  saletype  salecondition  saleprice  \n","0   2008        WD         Normal     208500  \n","1   2007        WD         Normal     181500  \n","2   2008        WD         Normal     223500  \n","3   2006        WD        Abnorml     140000  \n","4   2008        WD         Normal     250000  \n","\n","[5 rows x 81 columns]"],"text/html":["\n","  <div id=\"df-11750546-b5ba-493b-866c-445a0e5e349f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>mssubclass</th>\n","      <th>mszoning</th>\n","      <th>lotfrontage</th>\n","      <th>lotarea</th>\n","      <th>street</th>\n","      <th>alley</th>\n","      <th>lotshape</th>\n","      <th>landcontour</th>\n","      <th>utilities</th>\n","      <th>...</th>\n","      <th>poolarea</th>\n","      <th>poolqc</th>\n","      <th>fence</th>\n","      <th>miscfeature</th>\n","      <th>miscval</th>\n","      <th>mosold</th>\n","      <th>yrsold</th>\n","      <th>saletype</th>\n","      <th>salecondition</th>\n","      <th>saleprice</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>60</td>\n","      <td>RL</td>\n","      <td>65.0</td>\n","      <td>8450</td>\n","      <td>Pave</td>\n","      <td>None</td>\n","      <td>Reg</td>\n","      <td>Lvl</td>\n","      <td>AllPub</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2008</td>\n","      <td>WD</td>\n","      <td>Normal</td>\n","      <td>208500</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>20</td>\n","      <td>RL</td>\n","      <td>80.0</td>\n","      <td>9600</td>\n","      <td>Pave</td>\n","      <td>None</td>\n","      <td>Reg</td>\n","      <td>Lvl</td>\n","      <td>AllPub</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>2007</td>\n","      <td>WD</td>\n","      <td>Normal</td>\n","      <td>181500</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>60</td>\n","      <td>RL</td>\n","      <td>68.0</td>\n","      <td>11250</td>\n","      <td>Pave</td>\n","      <td>None</td>\n","      <td>IR1</td>\n","      <td>Lvl</td>\n","      <td>AllPub</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>0</td>\n","      <td>9</td>\n","      <td>2008</td>\n","      <td>WD</td>\n","      <td>Normal</td>\n","      <td>223500</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>70</td>\n","      <td>RL</td>\n","      <td>60.0</td>\n","      <td>9550</td>\n","      <td>Pave</td>\n","      <td>None</td>\n","      <td>IR1</td>\n","      <td>Lvl</td>\n","      <td>AllPub</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2006</td>\n","      <td>WD</td>\n","      <td>Abnorml</td>\n","      <td>140000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>60</td>\n","      <td>RL</td>\n","      <td>84.0</td>\n","      <td>14260</td>\n","      <td>Pave</td>\n","      <td>None</td>\n","      <td>IR1</td>\n","      <td>Lvl</td>\n","      <td>AllPub</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>2008</td>\n","      <td>WD</td>\n","      <td>Normal</td>\n","      <td>250000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 81 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-11750546-b5ba-493b-866c-445a0e5e349f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-11750546-b5ba-493b-866c-445a0e5e349f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-11750546-b5ba-493b-866c-445a0e5e349f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1995cad2-c9bc-4908-bed4-0aba39b3a61a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1995cad2-c9bc-4908-bed4-0aba39b3a61a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1995cad2-c9bc-4908-bed4-0aba39b3a61a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"collapsed":true,"id":"ukNw_vwrNPZo","executionInfo":{"status":"ok","timestamp":1723728964286,"user_tz":240,"elapsed":223,"user":{"displayName":"Steve Salmons","userId":"09210254671724444253"}},"outputId":"3dba116d-f588-4b2c-b5a9-5406d1435c63"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 1460 entries, 0 to 1459\n","Data columns (total 81 columns):\n"," #   Column         Non-Null Count  Dtype  \n","---  ------         --------------  -----  \n"," 0   id             1460 non-null   int64  \n"," 1   mssubclass     1460 non-null   int64  \n"," 2   mszoning       1460 non-null   object \n"," 3   lotfrontage    1201 non-null   float64\n"," 4   lotarea        1460 non-null   int64  \n"," 5   street         1460 non-null   object \n"," 6   alley          91 non-null     object \n"," 7   lotshape       1460 non-null   object \n"," 8   landcontour    1460 non-null   object \n"," 9   utilities      1460 non-null   object \n"," 10  lotconfig      1460 non-null   object \n"," 11  landslope      1460 non-null   object \n"," 12  neighborhood   1460 non-null   object \n"," 13  condition1     1460 non-null   object \n"," 14  condition2     1460 non-null   object \n"," 15  bldgtype       1460 non-null   object \n"," 16  housestyle     1460 non-null   object \n"," 17  overallqual    1460 non-null   int64  \n"," 18  overallcond    1460 non-null   int64  \n"," 19  yearbuilt      1460 non-null   int64  \n"," 20  yearremodadd   1460 non-null   int64  \n"," 21  roofstyle      1460 non-null   object \n"," 22  roofmatl       1460 non-null   object \n"," 23  exterior1st    1460 non-null   object \n"," 24  exterior2nd    1460 non-null   object \n"," 25  masvnrtype     1452 non-null   object \n"," 26  masvnrarea     1452 non-null   float64\n"," 27  exterqual      1460 non-null   object \n"," 28  extercond      1460 non-null   object \n"," 29  foundation     1460 non-null   object \n"," 30  bsmtqual       1423 non-null   object \n"," 31  bsmtcond       1423 non-null   object \n"," 32  bsmtexposure   1422 non-null   object \n"," 33  bsmtfintype1   1423 non-null   object \n"," 34  bsmtfinsf1     1460 non-null   int64  \n"," 35  bsmtfintype2   1422 non-null   object \n"," 36  bsmtfinsf2     1460 non-null   int64  \n"," 37  bsmtunfsf      1460 non-null   int64  \n"," 38  totalbsmtsf    1460 non-null   int64  \n"," 39  heating        1460 non-null   object \n"," 40  heatingqc      1460 non-null   object \n"," 41  centralair     1460 non-null   object \n"," 42  electrical     1459 non-null   object \n"," 43  firstflrsf     1460 non-null   int64  \n"," 44  secondflrsf    1460 non-null   int64  \n"," 45  lowqualfinsf   1460 non-null   int64  \n"," 46  grlivarea      1460 non-null   int64  \n"," 47  bsmtfullbath   1460 non-null   int64  \n"," 48  bsmthalfbath   1460 non-null   int64  \n"," 49  fullbath       1460 non-null   int64  \n"," 50  halfbath       1460 non-null   int64  \n"," 51  bedroomabvgr   1460 non-null   int64  \n"," 52  kitchenabvgr   1460 non-null   int64  \n"," 53  kitchenqual    1460 non-null   object \n"," 54  totrmsabvgrd   1460 non-null   int64  \n"," 55  functional     1460 non-null   object \n"," 56  fireplaces     1460 non-null   int64  \n"," 57  fireplacequ    770 non-null    object \n"," 58  garagetype     1379 non-null   object \n"," 59  garageyrblt    1379 non-null   float64\n"," 60  garagefinish   1379 non-null   object \n"," 61  garagecars     1460 non-null   int64  \n"," 62  garagearea     1460 non-null   int64  \n"," 63  garagequal     1379 non-null   object \n"," 64  garagecond     1379 non-null   object \n"," 65  paveddrive     1460 non-null   object \n"," 66  wooddecksf     1460 non-null   int64  \n"," 67  openporchsf    1460 non-null   int64  \n"," 68  enclosedporch  1460 non-null   int64  \n"," 69  threessnporch  1460 non-null   int64  \n"," 70  screenporch    1460 non-null   int64  \n"," 71  poolarea       1460 non-null   int64  \n"," 72  poolqc         7 non-null      object \n"," 73  fence          281 non-null    object \n"," 74  miscfeature    54 non-null     object \n"," 75  miscval        1460 non-null   int64  \n"," 76  mosold         1460 non-null   int64  \n"," 77  yrsold         1460 non-null   int64  \n"," 78  saletype       1460 non-null   object \n"," 79  salecondition  1460 non-null   object \n"," 80  saleprice      1460 non-null   int64  \n","dtypes: float64(3), int64(35), object(43)\n","memory usage: 924.0+ KB\n"]}]},{"cell_type":"code","source":["# check for null; return % of given column that has null values\n","df.isnull().mean()*100"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":458},"collapsed":true,"id":"H2V1n05OQKhb","executionInfo":{"status":"ok","timestamp":1723729965062,"user_tz":240,"elapsed":243,"user":{"displayName":"Steve Salmons","userId":"09210254671724444253"}},"outputId":"f418288f-03de-480d-d290-c689ebf87a4e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["id                0.000000\n","mssubclass        0.000000\n","mszoning          0.000000\n","lotfrontage      17.739726\n","lotarea           0.000000\n","                   ...    \n","mosold            0.000000\n","yrsold            0.000000\n","saletype          0.000000\n","salecondition     0.000000\n","saleprice         0.000000\n","Length: 81, dtype: float64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>id</th>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mssubclass</th>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mszoning</th>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>lotfrontage</th>\n","      <td>17.739726</td>\n","    </tr>\n","    <tr>\n","      <th>lotarea</th>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>mosold</th>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>yrsold</th>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>saletype</th>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>salecondition</th>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>saleprice</th>\n","      <td>0.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>81 rows Ã— 1 columns</p>\n","</div><br><label><b>dtype:</b> float64</label>"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["# check for use of 0\n","df.eq(0).sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":458},"collapsed":true,"id":"LDuEEik-QMnw","executionInfo":{"status":"ok","timestamp":1723729200902,"user_tz":240,"elapsed":220,"user":{"displayName":"Steve Salmons","userId":"09210254671724444253"}},"outputId":"a04868a3-e720-4d18-e46d-8ac87030a726"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["id               0\n","mssubclass       0\n","mszoning         0\n","lotfrontage      0\n","lotarea          0\n","                ..\n","mosold           0\n","yrsold           0\n","saletype         0\n","salecondition    0\n","saleprice        0\n","Length: 81, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>id</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>mssubclass</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>mszoning</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>lotfrontage</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>lotarea</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>mosold</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>yrsold</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>saletype</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>salecondition</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>saleprice</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>81 rows Ã— 1 columns</p>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":15}]},{"cell_type":"markdown","source":["> Fill missing values with `mode()` and `median()` where it may indicate invalid/incomplete data."],"metadata":{"id":"qi-QGOYDaThN"}},{"cell_type":"code","source":["for column in df.columns:\n","  if df[column].dtype == 'object':\n","    df[column].fillna(df[column].mode()[0], inplace=True)\n","  else:\n","    df[column].fillna(df[column].median(), inplace=True)"],"metadata":{"id":"BYw6jydQacOs","executionInfo":{"status":"ok","timestamp":1723765704431,"user_tz":240,"elapsed":165,"user":{"displayName":"Steve Salmons","userId":"09210254671724444253"}}},"execution_count":9,"outputs":[]},{"cell_type":"markdown","source":["> Define `KEY_COLS` - Feature columns with highest correlation, from the provided bar chart."],"metadata":{"id":"HHEJcuUjYuju"}},{"cell_type":"markdown","source":["## Objective: Identify variables that may be useful in predicting house prices"],"metadata":{"id":"2PMP3n2bde9_"}},{"cell_type":"code","source":["# initialize variable with important column names; derived from provided bar chart\n","KEY_COLS = ['saleprice', 'overallqual', 'grlivarea', 'garagecars', 'garagearea', 'totalbsmtsf', 'firstflrsf', 'fullbath']\n","# initialize variable for columns that are integer numerical\n","NUMERICAL_COLS = df.select_dtypes(include=['int64', 'float64']).columns"],"metadata":{"id":"pQWfpoZHU6aZ","executionInfo":{"status":"ok","timestamp":1723765437865,"user_tz":240,"elapsed":169,"user":{"displayName":"Steve Salmons","userId":"09210254671724444253"}}},"execution_count":8,"outputs":[]},{"cell_type":"markdown","source":["> Define and remove outliers"],"metadata":{"id":"CiknL0k-dLw0"}},{"cell_type":"code","source":["# calculate upper and lower quartiles to be considered outliers\n","Q1 = df[NUMERICAL_COLS].quantile(0.25)\n","Q3 = df[NUMERICAL_COLS].quantile(0.75)\n","IQR = Q3 - Q1\n","\n","# define outlier boundary\n","lower_boundary = Q1 - 1.5 * IQR\n","upper_boundary = Q3 + 1.5 * IQR\n","\n","# remove outliers\n","df = df[~((df[NUMERICAL_COLS] < lower_boundary) | (df[NUMERICAL_COLS] > upper_boundary)).any(axis=1)]"],"metadata":{"id":"hoVzyM5wbX2u","executionInfo":{"status":"ok","timestamp":1723765942463,"user_tz":240,"elapsed":185,"user":{"displayName":"Steve Salmons","userId":"09210254671724444253"}}},"execution_count":11,"outputs":[]},{"cell_type":"markdown","source":["> Plot correlations of `KEY_COLS` and `saleprice`"],"metadata":{"id":"-G9XUkLadlBE"}},{"cell_type":"code","source":["# correlation between saleprice and identified key columns\n","key_corr = df[KEY_COLS].corr().saleprice.sort_values(ascending=False)\n","# plot key correlations, confirm output is similar to provided bar chart\n","key_corr[1:].plot(kind='bar')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":514},"id":"PABO5tlpRER6","executionInfo":{"status":"ok","timestamp":1723765956893,"user_tz":240,"elapsed":388,"user":{"displayName":"Steve Salmons","userId":"09210254671724444253"}},"outputId":"bdb258bb-2e8a-4f4d-a327-bde177f32fb9"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: >"]},"metadata":{},"execution_count":12},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAAiMAAAHfCAYAAACCkthOAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAABFA0lEQVR4nO3deVxVdeL/8TeLgLgghqISirig5oJCIDVpC2mTuVUzZpZK6jSVZpJNkYVrYaaINTZWaoszjpaa+Su/WINZY1IqqOjkkhqCJYuZoLigcH5/+PAWAcpF5QPc1/PxuI+HnHsO980V5c3nfM7nOFmWZQkAAMAQZ9MBAACAY6OMAAAAoygjAADAKMoIAAAwijICAACMoowAAACjKCMAAMAoV9MBKqK4uFg//fSTGjRoICcnJ9NxAABABViWpRMnTqhFixZydi5//KNGlJGffvpJ/v7+pmMAAIBKyMzM1PXXX1/u8zWijDRo0EDShS+mYcOGhtMAAICKyM/Pl7+/v+3neHlqRBm5eGqmYcOGlBEAAGqYy02xYAIrAAAwijICAACMoowAAACjKCMAAMAoyggAADCKMgIAAIyijAAAAKMoIwAAwCjKCAAAMIoyAgAAjKKMAAAAoygjAADAKMoIAAAwijICAACMoowAAACjXE0HqEoBz31qOkIJ6TP7mY4AAIBxjIwAAACjKCMAAMAoyggAADCKMgIAAIyijAAAAKMoIwAAwCjKCAAAMIoyAgAAjKKMAAAAoypVRubPn6+AgAB5eHgoPDxcmzdvvuT+CQkJCgoKUt26deXv768JEybozJkzlQoMAABqF7vLyPLlyxUdHa3JkycrNTVV3bp1U9++fZWTk1Pm/kuXLtVzzz2nyZMna/fu3Vq0aJGWL1+u559//orDAwCAms/uMhIfH68xY8YoKipKnTp10oIFC+Tp6anFixeXuf+mTZt0880368EHH1RAQID69OmjoUOHXnI05ezZs8rPzy/xAAAAtZNdZaSwsFApKSmKjIz89RM4OysyMlLJycllHnPTTTcpJSXFVj4OHjyotWvX6u677y73deLi4uTl5WV7+Pv72xMTAADUIHbdtffo0aMqKiqSr69vie2+vr7as2dPmcc8+OCDOnr0qP7whz/IsiydP39ef/3rXy95miYmJkbR0dG2j/Pz8ykkAADUUtf8apoNGzbo5Zdf1htvvKHU1FStWrVKn376qaZPn17uMe7u7mrYsGGJBwAAqJ3sGhnx8fGRi4uLsrOzS2zPzs5Ws2bNyjzmxRdf1MMPP6zRo0dLkrp06aKCggL95S9/0aRJk+TszNXFAAA4MruagJubm0JCQpSUlGTbVlxcrKSkJEVERJR5zKlTp0oVDhcXF0mSZVn25gUAALWMXSMjkhQdHa0RI0YoNDRUYWFhSkhIUEFBgaKioiRJw4cPl5+fn+Li4iRJ/fv3V3x8vLp3767w8HDt379fL774ovr3728rJQAAwHHZXUaGDBmi3NxcxcbGKisrS8HBwUpMTLRNas3IyCgxEvLCCy/IyclJL7zwgn788Uc1adJE/fv310svvXT1vgoAAFBjOVk14FxJfn6+vLy8lJeXd0WTWQOe+/Qqprpy6TP7mY4AAMA1U9Gf38weBQAARlFGAACAUZQRAABgFGUEAAAYRRkBAABGUUYAAIBRlBEAAGAUZQQAABhl9wqsqJ1YEA4AYAojIwAAwCjKCAAAMIoyAgAAjKKMAAAAoygjAADAKMoIAAAwijICAACMoowAAACjKCMAAMAoyggAADCKMgIAAIyijAAAAKMoIwAAwCjKCAAAMIoyAgAAjKKMAAAAoygjAADAKFfTAYDqLuC5T01HKCF9Zj/TEQDgqmJkBAAAGEUZAQAARlFGAACAUZQRAABgVKXKyPz58xUQECAPDw+Fh4dr8+bN5e576623ysnJqdSjXz8m4QEAgEqUkeXLlys6OlqTJ09WamqqunXrpr59+yonJ6fM/VetWqUjR47YHrt27ZKLi4v+9Kc/XXF4AABQ89l9aW98fLzGjBmjqKgoSdKCBQv06aefavHixXruuedK7d+4ceMSHy9btkyenp6UEaAWqE6XPXPJM1Bz2TUyUlhYqJSUFEVGRv76CZydFRkZqeTk5Ap9jkWLFumBBx5QvXr1yt3n7Nmzys/PL/EAAAC1k11l5OjRoyoqKpKvr2+J7b6+vsrKyrrs8Zs3b9auXbs0evToS+4XFxcnLy8v28Pf39+emAAAoAap0qtpFi1apC5duigsLOyS+8XExCgvL8/2yMzMrKKEAACgqtk1Z8THx0cuLi7Kzs4usT07O1vNmjW75LEFBQVatmyZpk2bdtnXcXd3l7u7uz3RAABADWXXyIibm5tCQkKUlJRk21ZcXKykpCRFRERc8tgPP/xQZ8+e1UMPPVS5pAAAoFay+2qa6OhojRgxQqGhoQoLC1NCQoIKCgpsV9cMHz5cfn5+iouLK3HcokWLNGjQIF133XVXJzkAAKgV7C4jQ4YMUW5urmJjY5WVlaXg4GAlJibaJrVmZGTI2bnkgMvevXu1ceNGffbZZ1cnNQAAqDXsLiOSNHbsWI0dO7bM5zZs2FBqW1BQkCzLqsxLAQCAWo570wAAAKMoIwAAwCjKCAAAMIoyAgAAjKKMAAAAoygjAADAqEpd2gsAuLSA5z41HcEmfWY/0xGAS2JkBAAAGEUZAQAARlFGAACAUZQRAABgFGUEAAAYRRkBAABGUUYAAIBRlBEAAGAUZQQAABhFGQEAAEZRRgAAgFGUEQAAYBRlBAAAGEUZAQAARlFGAACAUZQRAABgFGUEAAAYRRkBAABGUUYAAIBRlBEAAGAUZQQAABhFGQEAAEZRRgAAgFGUEQAAYFSlysj8+fMVEBAgDw8PhYeHa/PmzZfc//jx43riiSfUvHlzubu7q3379lq7dm2lAgMAgNrF1d4Dli9frujoaC1YsEDh4eFKSEhQ3759tXfvXjVt2rTU/oWFhbrzzjvVtGlTrVixQn5+fjp06JAaNWp0NfIDAIAazu4yEh8frzFjxigqKkqStGDBAn366adavHixnnvuuVL7L168WMeOHdOmTZtUp04dSVJAQMCVpQYAALWGXadpCgsLlZKSosjIyF8/gbOzIiMjlZycXOYxa9asUUREhJ544gn5+vqqc+fOevnll1VUVFTu65w9e1b5+fklHgAAoHayq4wcPXpURUVF8vX1LbHd19dXWVlZZR5z8OBBrVixQkVFRVq7dq1efPFFzZkzRzNmzCj3deLi4uTl5WV7+Pv72xMTAADUINf8apri4mI1bdpUb731lkJCQjRkyBBNmjRJCxYsKPeYmJgY5eXl2R6ZmZnXOiYAADDErjkjPj4+cnFxUXZ2dont2dnZatasWZnHNG/eXHXq1JGLi4ttW8eOHZWVlaXCwkK5ubmVOsbd3V3u7u72RAMAADWUXSMjbm5uCgkJUVJSkm1bcXGxkpKSFBERUeYxN998s/bv36/i4mLbtn379ql58+ZlFhEAAOBY7D5NEx0drbffflvvvfeedu/erccee0wFBQW2q2uGDx+umJgY2/6PPfaYjh07pvHjx2vfvn369NNP9fLLL+uJJ564el8FAACosey+tHfIkCHKzc1VbGyssrKyFBwcrMTERNuk1oyMDDk7/9px/P39tW7dOk2YMEFdu3aVn5+fxo8fr2efffbqfRUAAKDGsruMSNLYsWM1duzYMp/bsGFDqW0RERH65ptvKvNSAACgluPeNAAAwCjKCAAAMIoyAgAAjKKMAAAAoygjAADAKMoIAAAwijICAACMoowAAACjKCMAAMAoyggAADCKMgIAAIyijAAAAKMoIwAAwCjKCAAAMIoyAgAAjKKMAAAAoygjAADAKMoIAAAwytV0AACAYwl47lPTEWzSZ/YzHQFiZAQAABhGGQEAAEZRRgAAgFGUEQAAYBRlBAAAGEUZAQAARlFGAACAUZQRAABgFGUEAAAYRRkBAABGUUYAAIBRlBEAAGAUZQQAABhVqTIyf/58BQQEyMPDQ+Hh4dq8eXO5+7777rtycnIq8fDw8Kh0YAAAULvYXUaWL1+u6OhoTZ48WampqerWrZv69u2rnJycco9p2LChjhw5YnscOnToikIDAIDaw+4yEh8frzFjxigqKkqdOnXSggUL5OnpqcWLF5d7jJOTk5o1a2Z7+Pr6XvI1zp49q/z8/BIPAABQO9lVRgoLC5WSkqLIyMhfP4GzsyIjI5WcnFzucSdPnlSrVq3k7++vgQMH6n//+98lXycuLk5eXl62h7+/vz0xAQBADWJXGTl69KiKiopKjWz4+voqKyurzGOCgoK0ePFiffzxx/rnP/+p4uJi3XTTTTp8+HC5rxMTE6O8vDzbIzMz056YAACgBnG91i8QERGhiIgI28c33XSTOnbsqDfffFPTp08v8xh3d3e5u7tf62gAAKAasKuM+Pj4yMXFRdnZ2SW2Z2dnq1mzZhX6HHXq1FH37t21f/9+e14aAIBaL+C5T01HsEmf2a/KXsuu0zRubm4KCQlRUlKSbVtxcbGSkpJKjH5cSlFRkXbu3KnmzZvblxQAANRKdp+miY6O1ogRIxQaGqqwsDAlJCSooKBAUVFRkqThw4fLz89PcXFxkqRp06apZ8+eatu2rY4fP65XX31Vhw4d0ujRo6/uVwIAAGoku8vIkCFDlJubq9jYWGVlZSk4OFiJiYm2Sa0ZGRlydv51wOWXX37RmDFjlJWVJW9vb4WEhGjTpk3q1KnT1fsqAABAjVWpCaxjx47V2LFjy3xuw4YNJT6eO3eu5s6dW5mXAQAADoB70wAAAKMoIwAAwCjKCAAAMIoyAgAAjKKMAAAAoygjAADAKMoIAAAwijICAACMoowAAACjKCMAAMAoyggAADCKMgIAAIyijAAAAKMoIwAAwCjKCAAAMIoyAgAAjKKMAAAAoygjAADAKMoIAAAwijICAACMoowAAACjKCMAAMAoyggAADCKMgIAAIyijAAAAKMoIwAAwCjKCAAAMIoyAgAAjKKMAAAAoygjAADAKMoIAAAwqlJlZP78+QoICJCHh4fCw8O1efPmCh23bNkyOTk5adCgQZV5WQAAUAvZXUaWL1+u6OhoTZ48WampqerWrZv69u2rnJycSx6Xnp6uiRMn6pZbbql0WAAAUPvYXUbi4+M1ZswYRUVFqVOnTlqwYIE8PT21ePHico8pKirSsGHDNHXqVAUGBl5RYAAAULvYVUYKCwuVkpKiyMjIXz+Bs7MiIyOVnJxc7nHTpk1T06ZNNWrUqAq9ztmzZ5Wfn1/iAQAAaie7ysjRo0dVVFQkX1/fEtt9fX2VlZVV5jEbN27UokWL9Pbbb1f4deLi4uTl5WV7+Pv72xMTAADUINf0apoTJ07o4Ycf1ttvvy0fH58KHxcTE6O8vDzbIzMz8xqmBAAAJrnas7OPj49cXFyUnZ1dYnt2draaNWtWav8DBw4oPT1d/fv3t20rLi6+8MKurtq7d6/atGlT6jh3d3e5u7vbEw0AANRQdo2MuLm5KSQkRElJSbZtxcXFSkpKUkRERKn9O3TooJ07d2r79u22x4ABA3Tbbbdp+/btnH4BAAD2jYxIUnR0tEaMGKHQ0FCFhYUpISFBBQUFioqKkiQNHz5cfn5+iouLk4eHhzp37lzi+EaNGklSqe0AAMAx2V1GhgwZotzcXMXGxiorK0vBwcFKTEy0TWrNyMiQszMLuwIAgIqxu4xI0tixYzV27Ngyn9uwYcMlj3333Xcr85IAAKCWYggDAAAYRRkBAABGUUYAAIBRlBEAAGAUZQQAABhFGQEAAEZRRgAAgFGUEQAAYBRlBAAAGEUZAQAARlFGAACAUZQRAABgFGUEAAAYRRkBAABGUUYAAIBRlBEAAGAUZQQAABhFGQEAAEZRRgAAgFGUEQAAYBRlBAAAGEUZAQAARlFGAACAUZQRAABgFGUEAAAYRRkBAABGUUYAAIBRlBEAAGAUZQQAABhFGQEAAEZRRgAAgFGVKiPz589XQECAPDw8FB4ers2bN5e776pVqxQaGqpGjRqpXr16Cg4O1pIlSyodGAAA1C52l5Hly5crOjpakydPVmpqqrp166a+ffsqJyenzP0bN26sSZMmKTk5WWlpaYqKilJUVJTWrVt3xeEBAEDNZ3cZiY+P15gxYxQVFaVOnTppwYIF8vT01OLFi8vc/9Zbb9XgwYPVsWNHtWnTRuPHj1fXrl21cePGKw4PAABqPrvKSGFhoVJSUhQZGfnrJ3B2VmRkpJKTky97vGVZSkpK0t69e9WrV69y9zt79qzy8/NLPAAAQO1kVxk5evSoioqK5OvrW2K7r6+vsrKyyj0uLy9P9evXl5ubm/r166fXX39dd955Z7n7x8XFycvLy/bw9/e3JyYAAKhBquRqmgYNGmj79u3asmWLXnrpJUVHR2vDhg3l7h8TE6O8vDzbIzMzsypiAgAAA1zt2dnHx0cuLi7Kzs4usT07O1vNmjUr9zhnZ2e1bdtWkhQcHKzdu3crLi5Ot956a5n7u7u7y93d3Z5oAACghrJrZMTNzU0hISFKSkqybSsuLlZSUpIiIiIq/HmKi4t19uxZe14aAADUUnaNjEhSdHS0RowYodDQUIWFhSkhIUEFBQWKioqSJA0fPlx+fn6Ki4uTdGH+R2hoqNq0aaOzZ89q7dq1WrJkif7xj39c3a8EAADUSHaXkSFDhig3N1exsbHKyspScHCwEhMTbZNaMzIy5Oz864BLQUGBHn/8cR0+fFh169ZVhw4d9M9//lNDhgy5el8FAACosewuI5I0duxYjR07tsznfj8xdcaMGZoxY0ZlXgYAADgA7k0DAACMoowAAACjKCMAAMAoyggAADCKMgIAAIyijAAAAKMoIwAAwCjKCAAAMIoyAgAAjKKMAAAAoygjAADAKMoIAAAwijICAACMoowAAACjKCMAAMAoyggAADCKMgIAAIyijAAAAKMoIwAAwCjKCAAAMIoyAgAAjKKMAAAAoygjAADAKMoIAAAwijICAACMoowAAACjKCMAAMAoyggAADCKMgIAAIyijAAAAKMoIwAAwCjKCAAAMKpSZWT+/PkKCAiQh4eHwsPDtXnz5nL3ffvtt3XLLbfI29tb3t7eioyMvOT+AADAsdhdRpYvX67o6GhNnjxZqamp6tatm/r27aucnJwy99+wYYOGDh2qL774QsnJyfL391efPn30448/XnF4AABQ89ldRuLj4zVmzBhFRUWpU6dOWrBggTw9PbV48eIy9//Xv/6lxx9/XMHBwerQoYMWLlyo4uJiJSUllfsaZ8+eVX5+fokHAAConewqI4WFhUpJSVFkZOSvn8DZWZGRkUpOTq7Q5zh16pTOnTunxo0bl7tPXFycvLy8bA9/f397YgIAgBrErjJy9OhRFRUVydfXt8R2X19fZWVlVehzPPvss2rRokWJQvN7MTExysvLsz0yMzPtiQkAAGoQ16p8sZkzZ2rZsmXasGGDPDw8yt3P3d1d7u7uVZgMAACYYlcZ8fHxkYuLi7Kzs0tsz87OVrNmzS557OzZszVz5kz95z//UdeuXe1PCgAAaiW7TtO4ubkpJCSkxOTTi5NRIyIiyj1u1qxZmj59uhITExUaGlr5tAAAoNax+zRNdHS0RowYodDQUIWFhSkhIUEFBQWKioqSJA0fPlx+fn6Ki4uTJL3yyiuKjY3V0qVLFRAQYJtbUr9+fdWvX/8qfikAAKAmsruMDBkyRLm5uYqNjVVWVpaCg4OVmJhom9SakZEhZ+dfB1z+8Y9/qLCwUPfff3+JzzN58mRNmTLlytIDAIAar1ITWMeOHauxY8eW+dyGDRtKfJyenl6ZlwAAAA6Ce9MAAACjKCMAAMAoyggAADCKMgIAAIyijAAAAKMoIwAAwCjKCAAAMIoyAgAAjKKMAAAAoygjAADAKMoIAAAwijICAACMoowAAACjKCMAAMAoyggAADCKMgIAAIyijAAAAKMoIwAAwCjKCAAAMIoyAgAAjKKMAAAAoygjAADAKMoIAAAwijICAACMoowAAACjKCMAAMAoyggAADCKMgIAAIyijAAAAKMoIwAAwCjKCAAAMKpSZWT+/PkKCAiQh4eHwsPDtXnz5nL3/d///qf77rtPAQEBcnJyUkJCQmWzAgCAWsjuMrJ8+XJFR0dr8uTJSk1NVbdu3dS3b1/l5OSUuf+pU6cUGBiomTNnqlmzZlccGAAA1C52l5H4+HiNGTNGUVFR6tSpkxYsWCBPT08tXry4zP1vvPFGvfrqq3rggQfk7u5eodc4e/as8vPzSzwAAEDtZFcZKSwsVEpKiiIjI3/9BM7OioyMVHJy8lULFRcXJy8vL9vD39//qn1uAABQvdhVRo4ePaqioiL5+vqW2O7r66usrKyrFiomJkZ5eXm2R2Zm5lX73AAAoHpxNR2gLO7u7hU+pQMAAGo2u0ZGfHx85OLiouzs7BLbs7OzmZwKAAAqxa4y4ubmppCQECUlJdm2FRcXKykpSREREVc9HAAAqP3sPk0THR2tESNGKDQ0VGFhYUpISFBBQYGioqIkScOHD5efn5/i4uIkXZj0+t1339n+/OOPP2r79u2qX7++2rZtexW/FAAAUBPZXUaGDBmi3NxcxcbGKisrS8HBwUpMTLRNas3IyJCz868DLj/99JO6d+9u+3j27NmaPXu2evfurQ0bNlz5VwAAAGq0Sk1gHTt2rMaOHVvmc78vGAEBAbIsqzIvAwAAHAD3pgEAAEZRRgAAgFGUEQAAYBRlBAAAGEUZAQAARlFGAACAUZQRAABgFGUEAAAYRRkBAABGUUYAAIBRlBEAAGAUZQQAABhFGQEAAEZRRgAAgFGUEQAAYBRlBAAAGEUZAQAARlFGAACAUZQRAABgFGUEAAAYRRkBAABGUUYAAIBRlBEAAGAUZQQAABhFGQEAAEZRRgAAgFGUEQAAYBRlBAAAGEUZAQAARlFGAACAUZQRAABgVKXKyPz58xUQECAPDw+Fh4dr8+bNl9z/ww8/VIcOHeTh4aEuXbpo7dq1lQoLAABqH7vLyPLlyxUdHa3JkycrNTVV3bp1U9++fZWTk1Pm/ps2bdLQoUM1atQobdu2TYMGDdKgQYO0a9euKw4PAABqPrvLSHx8vMaMGaOoqCh16tRJCxYskKenpxYvXlzm/vPmzdNdd92lZ555Rh07dtT06dPVo0cP/f3vf7/i8AAAoOZztWfnwsJCpaSkKCYmxrbN2dlZkZGRSk5OLvOY5ORkRUdHl9jWt29frV69utzXOXv2rM6ePWv7OC8vT5KUn59vT9xSis+euqLjr7Yr/XquJt6b8vHelK86vTfV6X2ReG8uhfemfLXtvbn4OSzLuuR+dpWRo0ePqqioSL6+viW2+/r6as+ePWUek5WVVeb+WVlZ5b5OXFycpk6dWmq7v7+/PXGrPa8E0wmqL96b8vHelI33pXy8N+XjvSnf1XxvTpw4IS8vr3Kft6uMVJWYmJgSoynFxcU6duyYrrvuOjk5ORlMdqHl+fv7KzMzUw0bNjSapbrhvSkf7035eG/Kx3tTNt6X8lW398ayLJ04cUItWrS45H52lREfHx+5uLgoOzu7xPbs7Gw1a9aszGOaNWtm1/6S5O7uLnd39xLbGjVqZE/Ua65hw4bV4i+6OuK9KR/vTfl4b8rHe1M23pfyVaf35lIjIhfZNYHVzc1NISEhSkpKsm0rLi5WUlKSIiIiyjwmIiKixP6S9Pnnn5e7PwAAcCx2n6aJjo7WiBEjFBoaqrCwMCUkJKigoEBRUVGSpOHDh8vPz09xcXGSpPHjx6t3796aM2eO+vXrp2XLlmnr1q166623ru5XAgAAaiS7y8iQIUOUm5ur2NhYZWVlKTg4WImJibZJqhkZGXJ2/nXA5aabbtLSpUv1wgsv6Pnnn1e7du20evVqde7c+ep9FVXI3d1dkydPLnUaCbw3l8J7Uz7em/Lx3pSN96V8NfW9cbIud70NAADANcS9aQAAgFGUEQAAYBRlBAAAGEUZAQAARlFGAADV0po1a3Tu3DnTMaqltLQ0FRcXm45x1VBGAADV0uDBg3X8+HFJkouLi3JycswGqka6d++uo0ePSpICAwP1888/G050ZarlvWmqg7S0tArv27Vr12uYpPo7fPiw1qxZo4yMDBUWFpZ4Lj4+3lAq81JTU1WnTh116dJFkvTxxx/rnXfeUadOnTRlyhS5ubkZTmjWqVOnyvyecfR/T9KFO6Tn5OSU+s23ZcuWhhKZ0aRJE33zzTfq37+/LMsyfm+y6qRRo0b64Ycf1LRpU6Wnp9f4URLKSDmCg4Pl5ORU7m2PLz7n5OSkoqKiKk5XfSQlJWnAgAEKDAzUnj171LlzZ6Wnp8uyLPXo0cN0PKMeffRRPffcc+rSpYsOHjyoBx54QIMHD9aHH36oU6dOKSEhwXREI3JzcxUVFaX/+7//K/N5R/739P333+uRRx7Rpk2bSmx31P9r/vrXv2rgwIFycnKSk5PTJe9p5mjvzX333afevXurefPmcnJyUmhoqFxcXMrc9+DBg1Wczn6UkXL88MMPpiPUCDExMZo4caKmTp2qBg0aaOXKlWratKmGDRumu+66y3Q8o/bt26fg4GBJ0ocffqhevXpp6dKl+vrrr/XAAw84bBl56qmndPz4cX377be69dZb9dFHHyk7O1szZszQnDlzTMczauTIkXJ1ddUnn3xi+yHjyKZMmaIHHnhA+/fv14ABA/TOO+9Uu5ummvLWW2/p3nvv1f79+/Xkk09qzJgxatCggelYlWcBV6B+/frW/v37LcuyrEaNGlm7du2yLMuytm/fbrVq1cpgMvMaNGhg7du3z7Isy4qMjLQSEhIsy7KsQ4cOWR4eHiajGdWsWTPr22+/tSzrwnu0d+9ey7Is6+OPP7Zuvvlmk9GM8/T0tHbv3m06RrU0ZcoUq6CgwHSMamnkyJFWfn6+6RhXhJERO3z33XdlnuMeMGCAoUTm1atXz/Z+NG/eXAcOHNANN9wgSbbJVY4qNDRUM2bMUGRkpL788kv94x//kHRh1O3ivZwcUUFBgZo2bSpJ8vb2Vm5urtq3b68uXbooNTXVcDqzOnXq5PD/bsrzt7/9rcRp80OHDumjjz5Sp06d1KdPH4PJzHvnnXdKfJyfn6/169crKChIHTt2NJTKPpSRCjh48KAGDx6snTt3lphHcnEI1dHOVf5Wz549tXHjRnXs2FF33323nn76ae3cuVOrVq1Sz549TcczKiEhQcOGDdPq1as1adIktW3bVpK0YsUK3XTTTYbTmRMUFKS9e/cqICBA3bp105tvvqmAgAAtWLBAzZs3Nx2vyuXn59v+/Morr+hvf/ubXn75ZXXp0kV16tQpsW/Dhg2rOl61MXDgQN17773661//quPHjyssLExubm46evSo4uPj9dhjj5mOaMyf//xn9erVS2PHjtXp06cVGhpqm7u3bNky3XfffaYjXp7hkZka4Z577rEGDhxo5ebmWvXr17e+++4767///a8VFhZmffXVV6bjGXXgwAFrx44dlmVZ1smTJ61HH33U6tKli3Xvvfda6enphtOZc/78eevLL7+0jh07Vuq506dPW4WFhQZSVQ9Lliyx3nnnHcuyLGvr1q2Wj4+P5ezsbHl4eFjLli0zG84AJycny9nZ2fb4/ce/3ebIrrvuOttp4Lffftvq2rWrVVRUZH3wwQdWhw4dDKczy9fX19q+fbtlWZb1r3/9y2rbtq1VUFBgvfHGG1ZwcLDhdBXDXXsrwMfHR+vXr1fXrl3l5eWlzZs3KygoSOvXr9fTTz+tbdu2mY6IasjDw0O7d+9W69atTUep1k6dOqU9e/aoZcuW8vHxMR2nyn355ZcV3rd3797XMEn15unpafs++fOf/6wbbrhBkydPVmZmpoKCgnTq1CnTEY2pW7eu9u3bJ39/fw0fPlwtWrTQzJkzlZGRoU6dOunkyZOmI14Wp2kqoKioyDZL2cfHRz/99JOCgoLUqlUr7d2713A6844fP64VK1bowIEDeuaZZ9S4cWOlpqbK19dXfn5+puMZ07lzZx08eJAyUo7CwkL98MMPatOmjUNfBv7bgpGRkSF/f/9SV9FYlqXMzMyqjlattG3bVqtXr9bgwYO1bt06TZgwQZKUk5Pj0KevJMnf31/Jyclq3LixEhMTtWzZMknSL7/8Ig8PD8PpKoYVWCugc+fO2rFjhyQpPDxcs2bN0tdff61p06YpMDDQcDqz0tLS1L59e73yyiuaPXu2bbXEVatWKSYmxmw4w2bMmKGJEyfqk08+0ZEjR5Sfn1/i4ahOnTqlUaNGydPTUzfccIMyMjIkSePGjdPMmTMNpzOrdevWys3NLbX92LFjDl9qY2NjNXHiRAUEBCg8PFwRERGSpM8++0zdu3c3nM6sp556SsOGDdP111+vFi1a6NZbb5UkffXVV7ZFF6s9w6eJaoTExERr5cqVlmVZ1vfff28FBQVZTk5Olo+Pj5WUlGQ4nVl33HGH9cwzz1iWdeEy3wMHDliWZVlff/21w1/a6+TkZHtw/v9XTz75pBUSEmL997//terVq2f7nlm9enWNOb99rTg5OVk5OTmltqenp1uenp4GElUvR44csVJTU62ioiLbtm+//dbas2ePwVTVw9atW61Vq1ZZJ06csG375JNPrI0bNxpMVXHMGamkY8eOydvb2+EXJfLy8lJqaqratGmjBg0aaMeOHQoMDNShQ4cUFBSkM2fOmI5ozOXmAjjq+f9WrVpp+fLl6tmzZ4nvmf3796tHjx4OOWoUHR0tSZo3b57GjBkjT09P23NFRUX69ttv5eLioq+//tpUROMeeeQRzZs3r9TCXgUFBRo3bpwWL15sKJlZ586dU4cOHfTJJ5/UmMt4y8KckUpq3Lix6QjVgru7e5k/PPbt26cmTZoYSFR9OGrZuJzc3FzbOiO/VVBQ4LDl/uIkeMuytHPnzhL3LXJzc1O3bt00ceJEU/Gqhffee08zZ84sVUZOnz6t999/32HLSJ06dWrFL32UkQq47bbbLvmf5Pr166swTfUyYMAATZs2TR988IGkC2uvZGRk6Nlnn60Z17ZXAW4IV1JoaKg+/fRTjRs3TtKv6/UsXLjQNg/A0XzxxReSpKioKM2bN8/hJ2T+Vn5+vizLkmVZOnHiRIkJmUVFRVq7dm2Z5daRPPHEE3rllVe0cOFCubrWzB/rNTN1Fbt4f5GLzp07p+3bt2vXrl0aMWKEmVDVxJw5c3T//feradOmOn36tHr37q2srCxFRETopZdeMh3PKG4IV7aXX35Zf/zjH/Xdd9/p/Pnzmjdvnr777jtt2rTJrstca6Pfr6SJC3envXijvPbt25d63snJSVOnTjWQrPrYsmWLkpKS9Nlnn6lLly6qV69eiedXrVplKFnFUUYqYO7cuWVunzJlSo24fvta8vLy0ueff66vv/5aO3bs0MmTJ9WjRw9FRkaajmYcN4Qr2x/+8Aft2LFDcXFx6tKliz777DP16NFDycnJNWfm/zW0detWffDBB2WOptWEHypX2xdffCHLsnT77bdr5cqVJU6Ru7m5qVWrVmrRooXBhOY1atSo5o9Em5w9W9N9//33lre3t+kYxhQWFlouLi7Wzp07TUeplrghXGmFhYVWVFSUdfDgQdNRqqV///vfVp06dax77rnHcnNzs+655x6rffv2lpeXlzVy5EjT8YxKT08vcRUNahdGRq5AcnJyjVlQ5lqoU6eOWrZs6bCnGy6HG8KVVqdOHa1cuVIvvvii6SjV0ssvv6y5c+fqiSeeUIMGDTRv3jy1bt1ajz76qEPet+e3WrVqpTNnzigtLU05OTkqLi4u8bwj37C0NqCMVMC9995b4mPLsnTkyBFt3brV4f9TnTRpkp5//nktWbKEK4x+hxvClW3QoEFavXq1bQVN/OrAgQPq16+fpAunIC5eYTRhwgTdfvvtDj03IjExUcOHDy/zrsZOTk4O90tR9+7dK3z1WU345YcyUgFeXl4lPnZ2dlZQUJCmTZvm8Leu/vvf/679+/erRYsWatWqVamJUzXhH8G1Mn78eB05ckSSNHnyZN11113617/+JTc3N7377rtmwxnUrl07TZs2TV9//bVCQkJKfc88+eSThpKZ5+3trRMnTkiS/Pz8tGvXLnXp0kXHjx936HuvSBdW6P3Tn/6k2NhY+fr6mo5j3KBBg0xHuKpY9AxX5HK/qU2ePLmKklR/jn5DuIsutay5k5OTDh48WIVpqpcHH3xQoaGhio6O1vTp0/X6669r4MCB+vzzz9WjRw+HnMB6UcOGDbVt2za1adPGdJRq4bXXXtNf/vIXeXh4KCMjQ9dff72cnWvuHV4oIwBQTRw7dkxnzpxRixYtVFxcrFmzZmnTpk1q166dXnjhBXl7e5uOaMwjjzyim2++WaNGjTIdpVpwdXXVTz/9pKZNm8rFxUVHjhyp0eutUEYqwJ5l348dO3aN06CmuO+++xQWFqZnn322xPZZs2Zpy5Yt+vDDDw0lA2qeU6dO6U9/+pOaNGmiLl26qE6dOiWed7TTey1btlRMTIzuvvtutW7dWlu3bi13xLVly5ZVnM5+lJEKiI+P14wZM9S3b1/bCpHJyclat26dXnzxxRITNx1tEbSioiLNnTu33HURHLmcNWnSROvXry+1dsbOnTsVGRmp7OxsQ8nMO3z4sNasWVPm90x8fLyhVNVDUVGRPvroI+3evVuS1KlTJw0cOLDGrqx5tSxatEh//etf5eHhoeuuu67EL4iOeHrvrbfe0rhx43T+/Ply97Esq+ZM7jV1TXFNcu+991qvv/56qe2vv/66NXDgwKoPVI28+OKLVvPmza3Zs2dbHh4e1vTp061Ro0ZZ1113nTVv3jzT8Yzy8PAo826iu3fvtjw8PAwkqh7+85//WJ6enlbnzp0tV1dXKzg42GrUqJHl5eVl3XbbbabjGbVr1y4rMDDQ8vT0tLp37251797dqlevnhUQEODw6/n4+vpaL730EmuN/EZ+fr61c+dOy8nJyUpKSrK2b99e5qMmoIxUQL169azvv/++1Pbvv//eqlevnoFE1UdgYKD1ySefWJZlWfXr17f2799vWZZlzZs3zxo6dKjJaMbdeOON1tSpU0ttnzx5stWjRw8DiaqHG2+80YqNjbUs68L3zIEDB6wTJ05YAwYMsN544w3D6czq2bOn1b9/f+vYsWO2bceOHbMGDBhgRUREGExmnre3t+3/F5T07rvvWmfOnDEd44pQRiqgZcuW1uzZs0ttnz17ttWyZUsDiaoPT09P69ChQ5ZlXVhxNCUlxbIsyzpw4IDVsGFDk9GMW7NmjeXq6moNHz7cevfdd613333Xevjhhy1XV1fro48+Mh3PmN+W1kaNGlm7du2yLMuytm/fbrVq1cpgMvM8PDxs78dv7dy506FH0yzLsp566inrpZdeMh2jWmrdurV19OjRUtt/+eUXq3Xr1gYS2c+xT0JW0NSpUzV69Ght2LBB4eHhkqRvv/1WiYmJevvttw2nM+v666/XkSNH1LJlS7Vp08Z2n5EtW7bI3d3ddDyj+vfvr9WrV+vll1/WihUrVLduXXXt2lX/+c9/1Lt3b9PxjKlXr55tnkjz5s114MAB3XDDDZJU5oJWjqR9+/bKzs62vR8X5eTkqG3btoZSVQ9FRUWaNWuW1q1bp65du5aawOrIc43S09PLnBdy9uxZ/fjjjwYS2Y8yUgEjR45Ux44d9dprr9mu8+/YsaM2btxoKyeOavDgwUpKSlJ4eLjGjRunhx56SIsWLVJGRgYrbErq16+fbUVNXNCzZ09t3LhRHTt21N13362nn35aO3fu1KpVq9SzZ0/T8apcfn6+7c9xcXF68sknNWXKFNt78c0332jatGl65ZVXTEWsFnbu3Knu3btLknbt2lXiuYpe7VjbrFmzxvbndevWlVigs6ioSElJSQoICDCQzH5cTYOr6ptvvrGti9C/f3/TcYw7fvy4VqxYoYMHD2rixIlq3LixUlNT5evrKz8/P9PxjDh48KBOnjyprl27qqCgQE8//bTteyY+Pl6tWrUyHbFKOTs7l/hhevG/5IvbfvtxjbgqAlXm4iJnTk5O+v2P8jp16iggIEBz5szRPffcYyKeXSgj5fjtbyuX07Bhw2uYpHo7c+aMQ98s8FLS0tIUGRkpLy8vpaena+/evQoMDNQLL7ygjIwMvf/++6Yjohr48ssvK7yvI5/e+738/HytX79eHTp0UIcOHUzHMap169basmVLjV7ZmTJSjt//tlIWqyZdw32NNGzYUIMHD9ZDDz2kO+64o0YvR3y1RUZGqkePHpo1a5YaNGigHTt2KDAwUJs2bdKDDz6o9PR00xGNuThidODAAT3zzDOMGOGy/vznP6tXr14aO3asTp8+rW7duik9PV2WZWnZsmW67777TEesVo4fP65GjRqZjlFhzBkpxxdffGE6Qo3w3nvvaenSpRo4cKC8vLw0ZMgQPfTQQwoNDTUdzbgtW7bozTffLLXdz89PWVlZBhJVD78fMRozZowaN26sVatWOeSIUVpaWoX37dq16zVMUr199dVXmjRpkiTpo48+kmVZOn78uN577z3NmDHDocvIK6+8ooCAAA0ZMkSS9Kc//UkrV65U8+bNtXbtWnXr1s1wwgowcxEPapv8/Hxr8eLF1p133mm5uLhY7dq1K3ONDUfSpEkTKzU11bKsX9fTsCzL+uyzz6zrr7/eZDSj7rjjDuuZZ56xLKvk+/L111875KW9Tk5OlrOzs+Xk5HTJh7Ozs+moRnl4eFgZGRmWZVnWww8/bD377LOWZVnWoUOHHH69p4CAAOvrr7+2LOvC/y+NGjWy1q1bZ40aNcq68847DaerGE7TlIPfVirvu+++07Bhw5SWlubQp7BGjx6tn3/+WR988IEaN26stLQ0ubi4aNCgQerVq5cSEhJMRzTCy8tLqampatOmTYnTV4cOHVJQUJDOnDljOmKVOnToUIX3dbTJvb/Vvn17zZgxQ/369VPr1q21bNky3X777dqxY4fuuOMOh74svG7dutq3b5/8/f01fvx4nTlzRm+++ab27dun8PBw/fLLL6YjXhanacoRHBxc5gzl33P0OSMXnTlzRmvWrNHSpUuVmJgoX19fPfPMM6ZjGTVnzhzdf//9atq0qU6fPq3evXsrKytLEREReumll0zHM8bd3b3MCeL79u1TkyZNDCQyy5ELhj2eeuopDRs2TPXr11erVq106623Srpw+ub3939yNN7e3srMzJS/v78SExM1Y8YMSRfmNdaUn0+UkXL88MMPpiPUCOvWrdPSpUu1evVqubq66v7779dnn32mXr16mY5mnJeXlz7//HNt3LhRaWlpOnnypHr06KHIyEjT0YwaMGCApk2bpg8++EDShUKfkZGhZ5991iHP+/92rYjLGTBgwDVMUr09/vjjCgsLU2Zmpu68807bZPnAwEDbD19Hde+99+rBBx9Uu3bt9PPPP+uPf/yjJGnbtm01ZrE8TtPginh6euqee+7RsGHDdPfdd5daFRH4vby8PN1///3aunWrTpw4oRYtWthGjNauXat69eqZjlilKnoFGqOwv7J+txaLozt37pxee+01ZWRkaOTIkbbF4ebOnasGDRpo9OjRhhNeHmXEDt99912Ztzx35N9WTpw4oQYNGpiOUS299tprZW53cnKSh4eH2rZtq169esnFxaWKk1UPjBjBXosWLdLcuXP1/fffS5LatWunp556qkb8sL1Wzp07p0cffVQvvviiWrdubTpOpVFGKuDgwYMaPHiwdu7cWWIeycVW7mi/reTn59sWervc4nCOvCBc69atlZubq1OnTsnb21uS9Msvv8jT01P169dXTk6OAgMD9cUXX8jf399wWqB6i42NVXx8vMaNG6eIiAhJUnJysv7+979rwoQJmjZtmuGE5nh5eWn79u2Ukdquf//+cnFx0cKFC9W6dWtt3rxZP//8s55++mnNnj1bt9xyi+mIVcrFxUVHjhxR06ZNy10czmJBOP373//WW2+9pYULF6pNmzaSpP379+vRRx/VX/7yF91888164IEH1KxZM61YscJw2qrDiFH5LvcDNTY2toqSVD9NmjTRa6+9pqFDh5bY/u9//1vjxo1z6KtpRowYoeDg4Bp9PzDKSAX4+Pho/fr16tq1q7y8vLR582YFBQVp/fr1evrpp7Vt2zbTEavUl19+qZtvvlmurq6XXcrakZevbtOmjVauXKng4OAS27dt26b77rtPBw8e1KZNm3TffffpyJEjZkIawIhR+S6e67/o3Llz+uGHH+Tq6qo2bdooNTXVUDLzGjVqpC1btqhdu3Yltu/bt09hYWE6fvy4mWDVwIwZMzRnzhzdcccdCgkJKTXv6sknnzSUrOIoIxXg7e2t1NRUtW7dWm3atNHChQt122236cCBA+rSpYtOnTplOiKqIU9PT3311VelVqPdsmWLevfurVOnTik9PV2dO3fWyZMnDaWseowY2Sc/P18jR47U4MGD9fDDD5uOY8y4ceNUp04dxcfHl9g+ceJEnT59WvPnzzeUzLxLnZ5xcnLSwYMHqzBN5XBpbwV07txZO3bsUOvWrRUeHq5Zs2bJzc1Nb731lgIDA03Hq3IsCFcxt912mx599FEtXLjQ9hvvtm3b9Nhjj+n222+XdOG26DX5PG9lvPDCC1q5cqWtiEhS27ZtNXv2bNuI0axZsxzyMt+yNGzYUFOnTlX//v0droxER0fb/uzk5KSFCxfqs88+U8+ePSVJ3377rTIyMjR8+HBTEauF2rAUBWWkAl544QUVFBRIunBO95577tEtt9yi6667TsuXLzecruqxIFzFLFq0SA8//LBCQkJslzyfP39ed9xxhxYtWiRJql+/vubMmWMyZpU7cuSIzp8/X2r7+fPnbffsadGihU6cOFHV0aqtvLw85eXlmY5R5X5/CjwkJESSdODAAUkXTqH7+Pjof//7X5Vnw9XFaZpKOnbsmLy9vR3yOneWr7bPnj17tG/fPklSUFCQgoKCDCcyq1+/fsrKyio1YjRmzBg1a9ZMn3zyif7f//t/ev7557Vz507DaavW7yf3WpalI0eOaMmSJerdu7eWLl1qKBmqm+joaE2fPl316tUrMYJUlt+f2qqOKCOXce7cOdWtW1fbt29X586dTcepVmrL9e2oWllZWXr44YeVlJRUasRoyZIl8vX11RdffKFz586pT58+htNee2lpaercubOcnZ1L/TtydnZWkyZNdPvttysmJoY1fWDTuHFj7du3Tz4+PrrtttvK3c/JyUnr16+vwmSVQxmpgMDAQH300Uc14zbMVaw2XN9+LR0+fFhr1qwpc7G8mvDbyrXEiNEFv71UvnXr1tqyZYt8fHxMx6oW7r333grvu2rVqmuYpPpxdnZWVlaWmjZtqsDAQG3ZskXXXXed6ViVxpyRCpg0aZKef/55LVmyRI0bNzYdp1oZNGiQVq9eXaOvb79WkpKSNGDAAAUGBmrPnj3q3Lmz0tPTZVmWevToYTqecR06dFCHDh1MxzCuUaNG+uGHH9S0aVNlZGRcdi6WI/Hy8jIdodry9va2fd+kp6eruLjYdKQrwshIBXTv3l379+/XuXPn1KpVq1LXcDvytf+14fr2ayUsLEx//OMfNXXqVDVo0EA7duxQ06ZNNWzYMN1111167LHHTEc0hhGjX/3lL3/R+++/r+bNmysjI0PXX399uQu+1YRLNFE1atv3DWWkAqZOnXrJ5ydPnlxFSaqf2nB9+7XSoEEDbd++XW3atJG3t7c2btyoG264QTt27NDAgQOVnp5uOqIRlxsxqgnnt6+2xMRE7d+/X08++aSmTZtW7tyQ8ePHV3EyVGe16fuG0zQV4Mhl43Jqw/Xt10q9evVsv/U3b95cBw4c0A033CBJDr10dUxMjCZOnGgbMVq5cmWJESNHdPHrTklJ0fjx45moWo4VK1bogw8+KHNEzRFHqGvT9w1lpIKOHz+uFStW6MCBA3rmmWfUuHFjpaamytfXV35+fqbjGVPeJWW/vc/IwIEDHXKuTc+ePbVx40Z17NhRd999t55++mnt3LlTq1atsi3a5Ih2796tf//735IkV1dXnT59WvXr19e0adM0cOBAhz599c4775iOUG299tprmjRpkkaOHKmPP/5YUVFROnDggLZs2aInnnjCdDyjasP3DWWkAtLS0hQZGSkvLy+lp6drzJgxaty4sVatWqWMjAy9//77piMas23bNqWmpqqoqMh2NcS+ffvk4uKiDh066I033tDTTz+tjRs3qlOnTobTVq34+HjbMu9Tp07V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\n"},"metadata":{}}]},{"cell_type":"markdown","source":["## Objective: `LinearRegression` Model with OLS\n","> via `scikit-learn`"],"metadata":{"id":"fftjdeFkduU5"}},{"cell_type":"code","source":["# X being features, and Y being our target for the model\n","X = df[KEY_COLS]\n","Y = df['saleprice']\n","\n","# initialize model\n","lrm = linear_model.LinearRegression()\n","\n","# fit model; estimates coefficients using OLS by default\n","lrm.fit(X, Y)\n","\n","# print results\n","print('linear_model coefficients:', lrm.coef_)\n","print('linear_model intercept:', lrm.intercept_)"],"metadata":{"id":"t855GDTjTr6E","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1723766602718,"user_tz":240,"elapsed":165,"user":{"displayName":"Steve Salmons","userId":"09210254671724444253"}},"outputId":"22108e7b-1298-4f07-de9c-ee4e73bc9b29"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["linear_model coefficients: [ 1.00000000e+00  1.66988304e-13 -2.57908807e-16 -5.09616661e-13\n","  2.14018182e-15 -1.73278550e-15  8.48815279e-16  2.94629648e-14]\n","linear_model intercept: 8.731149137020111e-11\n"]}]},{"cell_type":"markdown","source":["> via `statsmodels`"],"metadata":{"id":"gLpx0znBf3Yp"}},{"cell_type":"code","source":["X = sm.add_constant(X)\n","\n","results = sm.OLS(Y, X).fit()\n","\n","results.summary()"],"metadata":{"id":"3Tq9XSNRWo74","colab":{"base_uri":"https://localhost:8080/","height":636},"executionInfo":{"status":"ok","timestamp":1723767125340,"user_tz":240,"elapsed":221,"user":{"displayName":"Steve Salmons","userId":"09210254671724444253"}},"outputId":"ea2a091d-0460-47ec-c22d-cc0a20b87745"},"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<class 'statsmodels.iolib.summary.Summary'>\n","\"\"\"\n","                            OLS Regression Results                            \n","==============================================================================\n","Dep. Variable:              saleprice   R-squared:                       1.000\n","Model:                            OLS   Adj. R-squared:                  1.000\n","Method:                 Least Squares   F-statistic:                 2.679e+31\n","Date:                Fri, 16 Aug 2024   Prob (F-statistic):               0.00\n","Time:                        00:12:03   Log-Likelihood:                 12104.\n","No. Observations:                 557   AIC:                        -2.419e+04\n","Df Residuals:                     548   BIC:                        -2.415e+04\n","Df Model:                           8                                         \n","Covariance Type:            nonrobust                                         \n","===============================================================================\n","                  coef    std err          t      P>|t|      [0.025      0.975]\n","-------------------------------------------------------------------------------\n","const         2.59e-11   2.39e-11      1.086      0.278    -2.1e-11    7.28e-11\n","saleprice       1.0000   1.78e-16   5.62e+15      0.000       1.000       1.000\n","overallqual  1.069e-11    5.8e-12      1.842      0.066   -7.11e-13    2.21e-11\n","grlivarea   -2.832e-14   1.74e-14     -1.624      0.105   -6.26e-14    5.94e-15\n","garagecars  -1.331e-11   1.29e-11     -1.030      0.304   -3.87e-11    1.21e-11\n","garagearea   -3.99e-14   4.51e-14     -0.885      0.376   -1.28e-13    4.86e-14\n","totalbsmtsf  5.246e-14   3.41e-14      1.538      0.125   -1.45e-14    1.19e-13\n","firstflrsf  -6.741e-14   3.24e-14     -2.082      0.038   -1.31e-13   -3.82e-15\n","fullbath     8.357e-12   1.15e-11      0.726      0.468   -1.42e-11     3.1e-11\n","==============================================================================\n","Omnibus:                        1.038   Durbin-Watson:                   0.224\n","Prob(Omnibus):                  0.595   Jarque-Bera (JB):                0.875\n","Skew:                          -0.084   Prob(JB):                        0.646\n","Kurtosis:                       3.097   Cond. No.                     1.20e+06\n","==============================================================================\n","\n","Notes:\n","[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n","[2] The condition number is large, 1.2e+06. This might indicate that there are\n","strong multicollinearity or other numerical problems.\n","\"\"\""],"text/html":["<table class=\"simpletable\">\n","<caption>OLS Regression Results</caption>\n","<tr>\n","  <th>Dep. Variable:</th>        <td>saleprice</td>    <th>  R-squared:         </th>  <td>   1.000</td> \n","</tr>\n","<tr>\n","  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th>  <td>   1.000</td> \n","</tr>\n","<tr>\n","  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th>  <td>2.679e+31</td>\n","</tr>\n","<tr>\n","  <th>Date:</th>             <td>Fri, 16 Aug 2024</td> <th>  Prob (F-statistic):</th>   <td>  0.00</td>  \n","</tr>\n","<tr>\n","  <th>Time:</th>                 <td>00:12:03</td>     <th>  Log-Likelihood:    </th>  <td>  12104.</td> \n","</tr>\n","<tr>\n","  <th>No. Observations:</th>      <td>   557</td>      <th>  AIC:               </th> <td>-2.419e+04</td>\n","</tr>\n","<tr>\n","  <th>Df Residuals:</th>          <td>   548</td>      <th>  BIC:               </th> <td>-2.415e+04</td>\n","</tr>\n","<tr>\n","  <th>Df Model:</th>              <td>     8</td>      <th>                     </th>      <td> </td>    \n","</tr>\n","<tr>\n","  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>      <td> </td>    \n","</tr>\n","</table>\n","<table class=\"simpletable\">\n","<tr>\n","       <td></td>          <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n","</tr>\n","<tr>\n","  <th>const</th>       <td>  2.59e-11</td> <td> 2.39e-11</td> <td>    1.086</td> <td> 0.278</td> <td> -2.1e-11</td> <td> 7.28e-11</td>\n","</tr>\n","<tr>\n","  <th>saleprice</th>   <td>    1.0000</td> <td> 1.78e-16</td> <td> 5.62e+15</td> <td> 0.000</td> <td>    1.000</td> <td>    1.000</td>\n","</tr>\n","<tr>\n","  <th>overallqual</th> <td> 1.069e-11</td> <td>  5.8e-12</td> <td>    1.842</td> <td> 0.066</td> <td>-7.11e-13</td> <td> 2.21e-11</td>\n","</tr>\n","<tr>\n","  <th>grlivarea</th>   <td>-2.832e-14</td> <td> 1.74e-14</td> <td>   -1.624</td> <td> 0.105</td> <td>-6.26e-14</td> <td> 5.94e-15</td>\n","</tr>\n","<tr>\n","  <th>garagecars</th>  <td>-1.331e-11</td> <td> 1.29e-11</td> <td>   -1.030</td> <td> 0.304</td> <td>-3.87e-11</td> <td> 1.21e-11</td>\n","</tr>\n","<tr>\n","  <th>garagearea</th>  <td> -3.99e-14</td> <td> 4.51e-14</td> <td>   -0.885</td> <td> 0.376</td> <td>-1.28e-13</td> <td> 4.86e-14</td>\n","</tr>\n","<tr>\n","  <th>totalbsmtsf</th> <td> 5.246e-14</td> <td> 3.41e-14</td> <td>    1.538</td> <td> 0.125</td> <td>-1.45e-14</td> <td> 1.19e-13</td>\n","</tr>\n","<tr>\n","  <th>firstflrsf</th>  <td>-6.741e-14</td> <td> 3.24e-14</td> <td>   -2.082</td> <td> 0.038</td> <td>-1.31e-13</td> <td>-3.82e-15</td>\n","</tr>\n","<tr>\n","  <th>fullbath</th>    <td> 8.357e-12</td> <td> 1.15e-11</td> <td>    0.726</td> <td> 0.468</td> <td>-1.42e-11</td> <td>  3.1e-11</td>\n","</tr>\n","</table>\n","<table class=\"simpletable\">\n","<tr>\n","  <th>Omnibus:</th>       <td> 1.038</td> <th>  Durbin-Watson:     </th> <td>   0.224</td>\n","</tr>\n","<tr>\n","  <th>Prob(Omnibus):</th> <td> 0.595</td> <th>  Jarque-Bera (JB):  </th> <td>   0.875</td>\n","</tr>\n","<tr>\n","  <th>Skew:</th>          <td>-0.084</td> <th>  Prob(JB):          </th> <td>   0.646</td>\n","</tr>\n","<tr>\n","  <th>Kurtosis:</th>      <td> 3.097</td> <th>  Cond. No.          </th> <td>1.20e+06</td>\n","</tr>\n","</table><br/><br/>Notes:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.<br/>[2] The condition number is large, 1.2e+06. This might indicate that there are<br/>strong multicollinearity or other numerical problems."],"text/latex":"\\begin{center}\n\\begin{tabular}{lclc}\n\\toprule\n\\textbf{Dep. Variable:}    &    saleprice     & \\textbf{  R-squared:         } &     1.000   \\\\\n\\textbf{Model:}            &       OLS        & \\textbf{  Adj. R-squared:    } &     1.000   \\\\\n\\textbf{Method:}           &  Least Squares   & \\textbf{  F-statistic:       } & 2.679e+31   \\\\\n\\textbf{Date:}             & Fri, 16 Aug 2024 & \\textbf{  Prob (F-statistic):} &     0.00    \\\\\n\\textbf{Time:}             &     00:12:03     & \\textbf{  Log-Likelihood:    } &    12104.   \\\\\n\\textbf{No. Observations:} &         557      & \\textbf{  AIC:               } & -2.419e+04  \\\\\n\\textbf{Df Residuals:}     &         548      & \\textbf{  BIC:               } & -2.415e+04  \\\\\n\\textbf{Df Model:}         &           8      & \\textbf{                     } &             \\\\\n\\textbf{Covariance Type:}  &    nonrobust     & \\textbf{                     } &             \\\\\n\\bottomrule\n\\end{tabular}\n\\begin{tabular}{lcccccc}\n                     & \\textbf{coef} & \\textbf{std err} & \\textbf{t} & \\textbf{P$> |$t$|$} & \\textbf{[0.025} & \\textbf{0.975]}  \\\\\n\\midrule\n\\textbf{const}       &     2.59e-11  &     2.39e-11     &     1.086  &         0.278        &     -2.1e-11    &     7.28e-11     \\\\\n\\textbf{saleprice}   &       1.0000  &     1.78e-16     &  5.62e+15  &         0.000        &        1.000    &        1.000     \\\\\n\\textbf{overallqual} &    1.069e-11  &      5.8e-12     &     1.842  &         0.066        &    -7.11e-13    &     2.21e-11     \\\\\n\\textbf{grlivarea}   &   -2.832e-14  &     1.74e-14     &    -1.624  &         0.105        &    -6.26e-14    &     5.94e-15     \\\\\n\\textbf{garagecars}  &   -1.331e-11  &     1.29e-11     &    -1.030  &         0.304        &    -3.87e-11    &     1.21e-11     \\\\\n\\textbf{garagearea}  &    -3.99e-14  &     4.51e-14     &    -0.885  &         0.376        &    -1.28e-13    &     4.86e-14     \\\\\n\\textbf{totalbsmtsf} &    5.246e-14  &     3.41e-14     &     1.538  &         0.125        &    -1.45e-14    &     1.19e-13     \\\\\n\\textbf{firstflrsf}  &   -6.741e-14  &     3.24e-14     &    -2.082  &         0.038        &    -1.31e-13    &    -3.82e-15     \\\\\n\\textbf{fullbath}    &    8.357e-12  &     1.15e-11     &     0.726  &         0.468        &    -1.42e-11    &      3.1e-11     \\\\\n\\bottomrule\n\\end{tabular}\n\\begin{tabular}{lclc}\n\\textbf{Omnibus:}       &  1.038 & \\textbf{  Durbin-Watson:     } &    0.224  \\\\\n\\textbf{Prob(Omnibus):} &  0.595 & \\textbf{  Jarque-Bera (JB):  } &    0.875  \\\\\n\\textbf{Skew:}          & -0.084 & \\textbf{  Prob(JB):          } &    0.646  \\\\\n\\textbf{Kurtosis:}      &  3.097 & \\textbf{  Cond. No.          } & 1.20e+06  \\\\\n\\bottomrule\n\\end{tabular}\n%\\caption{OLS Regression Results}\n\\end{center}\n\nNotes: \\newline\n [1] Standard Errors assume that the covariance matrix of the errors is correctly specified. \\newline\n [2] The condition number is large, 1.2e+06. This might indicate that there are \\newline\n strong multicollinearity or other numerical problems."},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":[],"metadata":{"id":"BMzCD4ZDhvPW"},"execution_count":null,"outputs":[]}]}
{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNPz/WK33ze/Y/B5rTZ3T0a"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Lesson 3 - Model performance + House Prices"],"metadata":{"id":"WRMxEjJfNZD5"}},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","import numpy as np\n","import pandas as pd\n","import seaborn as sns\n","\n","from sqlalchemy import create_engine\n","from scipy import stats\n","from scipy.stats import boxcox\n","from scipy.stats import jarque_bera\n","from scipy.stats import normaltest\n","from sklearn import linear_model\n","import statsmodels.api as sm\n","from statsmodels.stats.outliers_influence import variance_inflation_factor\n","from statsmodels.tsa.stattools import acf\n","\n","import warnings\n","warnings.filterwarnings('ignore')\n","\n","# Display preferences (from example notebook)\n","%matplotlib inline\n","pd.options.display.float_format = '{:.3f}'.format\n","\n"],"metadata":{"id":"-TLLWmCnLU_N"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Wac52T5wLNUo"},"outputs":[],"source":["postgres_user = 'dsbc_student'\n","postgres_pw = '7*.8G9QH21'\n","postgres_host = '142.93.121.174'\n","postgres_port = '5432'\n","postgres_db = 'houseprices'\n","\n","\n","engine = create_engine('postgresql://{}:{}@{}:{}/{}'.format(\n","    postgres_user, postgres_pw, postgres_host, postgres_port, postgres_db))\n","\n","df = pd.read_sql_query('select * from houseprices',con=engine)\n","\n","# No need for an open connection,\n","# because you're only doing a single query\n","engine.dispose()"]},{"cell_type":"code","source":["# model 1\n","Y = df['saleprice']\n","X = df[['overallqual', 'grlivarea', 'garagecars', 'garagearea', 'totalbsmtsf']]\n","\n","X = sm.add_constant(X)\n","\n","results = sm.OLS(Y, X).fit()\n","\n","print(results.summary())"],"metadata":{"id":"-fETfQ3lAOAG","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1724086806343,"user_tz":240,"elapsed":4,"user":{"displayName":"Steve Salmons","userId":"09210254671724444253"}},"outputId":"476b75de-70b1-40f6-c577-746625b3c42d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["                            OLS Regression Results                            \n","==============================================================================\n","Dep. Variable:              saleprice   R-squared:                       0.761\n","Model:                            OLS   Adj. R-squared:                  0.760\n","Method:                 Least Squares   F-statistic:                     926.5\n","Date:                Mon, 19 Aug 2024   Prob (F-statistic):               0.00\n","Time:                        17:00:05   Log-Likelihood:                -17499.\n","No. Observations:                1460   AIC:                         3.501e+04\n","Df Residuals:                    1454   BIC:                         3.504e+04\n","Df Model:                           5                                         \n","Covariance Type:            nonrobust                                         \n","===============================================================================\n","                  coef    std err          t      P>|t|      [0.025      0.975]\n","-------------------------------------------------------------------------------\n","const       -9.907e+04   4638.450    -21.359      0.000   -1.08e+05      -9e+04\n","overallqual  2.364e+04   1072.532     22.037      0.000    2.15e+04    2.57e+04\n","grlivarea      45.3458      2.489     18.218      0.000      40.463      50.228\n","garagecars   1.454e+04   3022.681      4.812      0.000    8615.034    2.05e+04\n","garagearea     17.1334     10.468      1.637      0.102      -3.401      37.668\n","totalbsmtsf    31.5015      2.904     10.848      0.000      25.805      37.198\n","==============================================================================\n","Omnibus:                      438.146   Durbin-Watson:                   1.971\n","Prob(Omnibus):                  0.000   Jarque-Bera (JB):            40648.199\n","Skew:                          -0.338   Prob(JB):                         0.00\n","Kurtosis:                      28.841   Cond. No.                     9.23e+03\n","==============================================================================\n","\n","Notes:\n","[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n","[2] The condition number is large, 9.23e+03. This might indicate that there are\n","strong multicollinearity or other numerical problems.\n"]}]},{"cell_type":"markdown","source":["## Summary Analysis\n","- R-Squared: 0.761\n","- Adj. R-Squared: 0.760\n","- F-Stat: 926.5\n","- AIC: 3.501e+04\n","- BIC: 3.504e+04"],"metadata":{"id":"GlFXKhkbhk8-"}},{"cell_type":"markdown","source":["R-Squared, Adjusted R-Squared: good  \n","The score of `0.761` indicates the model can explain 76% of the variance in it's dependant variable. The Adjusted R-Squared score being `0.760` is very close to the R-Squared value. This indicates that expanding the tests would not result in a significant overfitting problem. Generally, this indicates a good balance between model complexity and performance.\n","\n","F-Stat: good  \n","Scoring at `926.5` indicates that the model and/or its predicators are statistically significant, and explains a majority of the variance in the dependant variable.\n","\n","AIC/BIC: good  \n","Both values being similar can indicate the model is not overfitting/is overly complex. Without additional model testing (such as the Weather exercise), it is difficult to accurately portray the usefulness of this score alone."],"metadata":{"id":"0k9hyCTEiPVB"}},{"cell_type":"code","source":["df['totalsf'] = df['totalbsmtsf'] + df['firstflrsf'] + df['secondflrsf']\n","\n","df['int_over_sf'] = df['totalsf'] * df['overallqual']\n","\n","# Y is the target variable\n","Y = np.log1p(df['saleprice'])\n","# X is the feature set\n","X = df[['overallqual', 'grlivarea', 'garagecars', 'garagearea', 'totalsf', 'int_over_sf']]\n","\n","X = sm.add_constant(X)\n","\n","results = sm.OLS(Y, X).fit()\n","\n","print(results.summary())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":216},"id":"3-9Za_E0lPtX","executionInfo":{"status":"error","timestamp":1724113727580,"user_tz":240,"elapsed":228,"user":{"displayName":"Steve Salmons","userId":"09210254671724444253"}},"outputId":"d9226a5f-0a66-4048-bcf3-b1fecfa0edb5"},"execution_count":1,"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'df' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-1-fb129e4d495b>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'totalsf'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'totalbsmtsf'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'firstflrsf'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'secondflrsf'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'int_over_sf'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'totalsf'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'overallqual'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;31m# Y is the target variable\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'df' is not defined"]}]},{"cell_type":"markdown","source":["With the adjusted model, each model score has improved.\n","\n","A R-Squared/Adjusted R-squared value over `.080` indicates the model can explain +80% of variance. The F-statistic has icreased, indicating the adjusted model features are more applicable and are stastistically more significant in calculation. Both AIC and BIC values are lower as well, again an improvement over the first model."],"metadata":{"id":"cpy9sVWDlhvA"}}]}